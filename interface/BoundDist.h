/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef BOUNDDIST
#define BOUNDDIST

#include <math.h>
#include "Math/SpecFunc.h"
#include "TMath.h"
#include "TRandom3.h"

#include "RooAbsReal.h"
#include "RooRealProxy.h"
 
class BoundDist : public RooAbsReal {
 protected:

  RooRealProxy P1 ;
  RooRealProxy P2 ;
  RooRealProxy P3 ;
  RooRealProxy P4p ;
  RooRealProxy P5p ;
  RooRealProxy P6p ;
  RooRealProxy P8p ;

  bool useCTL4;
  double useCTL15;

  bool verbose;

  Double_t evaluate() const ;

  Double_t evalR(double Radius) const;
  Double_t eval4(double dP2,
		 double dP4p,
		 double dP5p,
		 double dP6p,
		 double dP8p
		 ) const;
  Double_t eval15(double dP1,
		  double dP2,
		  double dP3,
		  double dP4p,
		  double dP5p,
		  double dP6p,
		  double dP8p
		  ) const;

 public:
  BoundDist() {} ; 
  BoundDist(const char *name, const char *title,
	    RooAbsReal& _P1,
	    RooAbsReal& _P2,
	    RooAbsReal& _P3,
	    RooAbsReal& _P4p,
	    RooAbsReal& _P5p,
	    RooAbsReal& _P6p,
	    RooAbsReal& _P8p,
	    bool _useCTL4 = true,
	    double _useCTL15 = 0,
	    bool _verbose = false);
  BoundDist(const BoundDist& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new BoundDist(*this,newname); }
  inline virtual ~BoundDist() { }
  
  ClassDef(BoundDist,1) // Step function: 0 inside physical region, 1 outside it
    };

#endif
