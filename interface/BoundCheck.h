/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef BOUNDCHECK
#define BOUNDCHECK

#include <math.h>
#include "Math/SpecFunc.h"
#include "TMath.h"

#include "RooAbsReal.h"
#include "RooRealProxy.h"
 
class BoundCheck : public RooAbsReal {
 protected:

  RooRealProxy P1 ;
  RooRealProxy P2 ;
  RooRealProxy P3 ;
  RooRealProxy P4p ;
  RooRealProxy P5p ;
  RooRealProxy P6p ;
  RooRealProxy P8p ;

  bool useCTL4;
  double useCTL15;

  bool verbose;

  Double_t evaluate() const ;

 public:
  BoundCheck() {} ; 
  BoundCheck(const char *name, const char *title,
	     RooAbsReal& _P1,
	     RooAbsReal& _P2,
	     RooAbsReal& _P3,
	     RooAbsReal& _P4p,
	     RooAbsReal& _P5p,
	     RooAbsReal& _P6p,
	     RooAbsReal& _P8p,
	     bool _useCTL4 = true,
	     double _useCTL15 = 0,
	     bool _verbose = false);
  BoundCheck(const BoundCheck& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new BoundCheck(*this,newname); }
  inline virtual ~BoundCheck() { }

  Bool_t isInCTL4() const ;
  Bool_t isInCTL15() const ;
  
  ClassDef(BoundCheck,1) // Step function: 0 inside physical region, 1 outside it
    };

#endif
